# This is a basic workflow to help you get started with Actions

name: Trigger with PR

# Controls when the workflow will run
on:
  pull_request:
    types:
      - opened
      - synchronize

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  zero:
    runs-on: ubuntu-latest
    steps:
      - run: exit 1
        continue-on-error: true

  one:
    runs-on: ubuntu-latest
    steps:
      - run: echo "Sucesso"

  two:
    needs: one
    runs-on: ubuntu-latest
    steps:
      - run: echo "Sucesso"

  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: zero

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: sleep 15

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.

  teste:
    runs-on: ubuntu-latest
    name: Run n${{ matrix.index }}
    strategy:
      matrix:
        index: [1, 2, 3, 4, 5]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - run: |
          echo '{\n  \"run\": {\n    \"command\": \"nx run-many -t banana-test -p maca-lib melancia-lib\",\n    \"startTime\": \"2024-03-13T13:01:54.910Z\",\n    \"endTime\": \"2024-03-13T13:02:05.268Z\",\n    \"inner\": false\n  },\n  \"tasks\": [\n    {\n      \"taskId\": \"maca-lib:banana-test\",\n      \"target\": \"banana-test\",\n      \"projectName\": \"maca-lib\",\n      \"hash\": \"17752915216145404742\",\n      \"startTime\": \"2024-03-13T13:01:54.921Z\",\n      \"endTime\": \"2024-03-13T13:02:05.046Z\",\n      \"params\": \"\",\n      \"cacheStatus\": \"cache-miss\",\n      \"status\": 0\n    },\n    {\n      \"taskId\": \"melancia-lib:banana-test\",\n      \"target\": \"banana-test\",\n      \"projectName\": \"melancia-lib\",\n      \"hash\": \"1079513487851603293\",\n      \"startTime\": \"2024-03-13T13:01:54.920Z\",\n      \"endTime\": \"2024-03-13T13:02:05.265Z\",\n      \"params\": \"\",\n      \"cacheStatus\": \"cache-miss\",\n      \"status\": 1\n    }\n  ]\n}\n' >> .nx/cache/run${{matrix.index}}.json

      - run: ls

      - name: Archive reports artifacts
        uses: actions/upload-artifact@v4
        with:
          name: reports-${{ matrix.index }}
          path: |
            macro/**/arquivo-${{ matrix.index }}-*.html
            .nx/cache/run${{ matrix.index }}.json
          if-no-files-found: ignore

  check-test:
    runs-on: ubuntu-latest
    needs: teste
    steps:
      - name: List reports
        run: ls -Ra .
        continue-on-error: true

      - name: Download reports artifacts
        uses: actions/download-artifact@v4
        with:
          path: |
            macro
            .nx
          pattern: reports-*
          merge-multiple: true

      - name: List reports
        run: ls -Ra .
        continue-on-error: true

      - name: Run a one-line script
        run: echo "Sucesso"
